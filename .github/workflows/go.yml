name: Go


on:
  push:
    branches: [ main ]
    workflow_call:
    workflow_dispatch:

  #pull_request:
    #branches: [ master ]
permissions:
  contents: write
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: mkdir
      run: mkdir ./package
      
    - name: Install mingw32 cross toolchains
      run: |
        MINGW_LLVM_URL="https://github.com/mstorsjo/llvm-mingw/releases/download/20231128/llvm-mingw-20231128-msvcrt-ubuntu-20.04-x86_64.tar.xz"
        mkdir -p $HOME/mingw-llvm
        wget $MINGW_LLVM_URL -O $HOME/mingw-llvm/llvm.tar.xz
        cd $HOME/mingw-llvm
        tar -xvf llvm.tar.xz --strip-components 1
    - name: Build lightsock_windows
      run: |
        export PATH="$HOME/mingw-llvm/bin:$PATH"
        ABIS="x86_64 i686 aarch64 armv7"
          echo "- Compiling lightsock-$i-win.exe"
        for i in $ABIS; do
          echo "==> Compiling Client.cpp for $i..."
          ${i}-w64-mingw32-clang++ Client.cpp -lws2_32 -o lightsock-$i-win.exe
        done

    - name: Build Go 
      run: |
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64  go build -o ./package/main-darwin-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64  go build -o ./package/main-darwin-arm64 ./sock.go
        CGO_ENABLED=0 GOOS=dragonfly GOARCH=amd64  go build -o ./package/main-dragonfly-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=freebsd GOARCH=arm  go build -o ./package/main-freebsd-arm ./sock.go
        CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64  go build -o ./package/main-freebsd-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=freebsd GOARCH=386  go build -o ./package/main-freebsd-386 ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=386  go build -o ./package/main-linux-386 ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build -o ./package/main-linux-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=arm  go build -o ./package/main-linux-arm ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64  go build -o ./package/main-linux-arm64 ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=ppc64  go build -o ./package/main-linux-ppc64 ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=ppc64le  go build -o ./package/main-linux-ppc64le ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=mips  go build -o ./package/main-linux-mips ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=mipsle  go build -o ./package/main-linux-mipsle ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=mips64  go build -o ./package/main-linux-mips64 ./sock.go
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build -o ./package/main-linux-mips64le ./sock.go
        CGO_ENABLED=0 GOOS=openbsd GOARCH=arm  go build -o ./package/main-openbsd-arm ./sock.go
        CGO_ENABLED=0 GOOS=openbsd GOARCH=amd64  go build -o ./package/main-openbsd-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=openbsd GOARCH=386  go build -o ./package/main-openbsd-386 ./sock.go
        CGO_ENABLED=0 GOOS=plan9 GOARCH=amd64  go build -o ./package/main-plan9-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=plan9 GOARCH=386  go build -o ./package/main-plan9-386 ./sock.go
        CGO_ENABLED=0 GOOS=solaris GOARCH=amd64  go build -o ./package/main-solaris-amd64 ./sock.go
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64  go build -o ./package/main-windows-amd64.exe ./sock.go
        CGO_ENABLED=0 GOOS=windows GOARCH=386  go build -o ./package/main-windows-386.exe ./sock.go
        CGO_ENABLED=0 GOOS=windows GOARCH=arm  go build -o ./package/main-windows-arm.exe ./sock.go

    - name: Test
      run: go test ./sock.go


    - name: Package

      run: |
        7z a -mx9 sock.7z ./package/

    - name: Upload windows build artifact
      uses: actions/upload-artifact@v4
      with:
        name: lightsock_windows
        path: |
          ./lightsock-*-win.exe

    - name: Upload go build artifact
      uses: actions/upload-artifact@v4
      with:
        name: lightsock_go_package
        path: |
          ./package/main-*

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ env.SIGNING_KEY != '' && github.ref_type == 'tag' }}
      with:
        tag_name: ${{ github.tag }}
        release_name: ${{ github.tag }}
        files: |
           sock.7z
           ./package/main-*
           ./lightsock-*-win.exe
           
           
           
           
        draft: false

          
